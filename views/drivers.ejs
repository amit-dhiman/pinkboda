<!DOCTYPE html>
<html lang="en">
<head>
  <title>Houzmart</title>
  <!-- Required meta tags -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <!-- <link rel="shortcut icon" href="/images/" type="image/x-icon"> -->

  <!-- Bootstrap CSS v5.2.0-beta1 -->
  <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" /> -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">
  <!-- Data Table CSS -->
  <link rel='stylesheet' href='https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css'>
  <!-- Font Awesome CSS -->
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css'>
  
  <!-- custom css -->
  <link rel="stylesheet" href="/assets/css/styles.css" />
</head>

<body>
<div class="container-fluid">
  <div class="row flex-nowrap">

  <!-- Added SideBar here -->
  <%- include ('./partials/sidebar.ejs') %>

    <div class="col-md-9">
      <div class="row">
      <!------- Add Full Navbar here --------->
      <%- include ('./partials/navbar.ejs') %>

      <!----------------- driver section is here -------------->

        <div class="right-sidebar1">
          <div class="riders_tab">
            <ul class="nav nav-tabs driver" id="myTab">
              <li class="nav-item project_tab">
                <a href="#drivers" class="nav-link active" id="myDriver" data-bs-toggle="tab">My drivers</a>
              </li>
              <li class="nav-item project-tab">
                <a href="#requests" class="nav-link" id="myPendingReq" data-bs-toggle="tab">Pending requests</a>
              </li>
            </ul>
            <div class="tab-content table-responsive">
              <div class="tab-pane fade show active" id="drivers">
                <table class="table driver" id="example">
                  <thead>
                    <tr class="tabl-size">
                      <th scope="col">Driver Profile</th>
                      <th scope="col">Full Name</th>
                      <th scope="col">Gender</th>
                      <th scope="col"><a href="http://161.97.132.85/Designing/Houzmart_admin/Total_riders.ejs">Total Ride</a></th>
                      <th scope="col">Passport photo</th>
                      <th scope="col">ID Card</th>
                      <th scope="col">License</th>
                      <th scope="col">Insurance</th>
                      <th scope="col">License Year</th>
                      <th scope="col">Complaint</th>
                      <th scope="col"><a href="http://161.97.132.85/Designing/Houzmart_admin/total_earning.ejs">Total Earning</a></th>
                      <th scope="col">Signup date</th>
                      <th scope="col">Action</th>
                      <th scope="col">Contact</th>
                    </tr>
                  </thead>
                  <tbody>

                    <% for(let driver of getDrivers) { %>
                      <% const formattedDate = new Date(driver.created_at).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' }); %>
                      <tr class="tabl_size">
                        <th scope="row" class=""><img class="profile_img" src="<%= driver.profile_image ? (driverImageUrl + driver.profile_image) : '/images/staticDriver.jpg'%>" alt="" onerror="this.style.display='none'; this.style.content='';"/></th>
                        <td><%=driver.username %></td>
                        <td><%=driver.gender %></td>
                        <td><%=driver.total_rides %></td>
                        <th scope="row" class=""><img class="passport_img" src="<%=(driverImageUrl + driver.passport_photo)%>" alt="" onerror="this.style.display='none'; this.style.content='';"/></th></th>
                        <th scope="row"><img class="idcard_img" src="<%=driverImageUrl + driver.id_card %>" alt="" onerror="this.style.display='none'; this.style.content='';"/></th>
                        <th scope="row"><img class="license_img" src="<%=driverImageUrl + driver.license %>" alt="" onerror="this.style.display='none'; this.style.content='';"/></th>
                        <th scope="row"><img class="license_img" src="<%=driverImageUrl + driver.vechile_insurance %>" alt="" onerror="this.style.display='none'; this.style.content='';"/></th>
                        <td><%= driver.year %></td>
                        <td>N/A</td>      <!-- have to add complaints here -->
                        <td>$2030</td>    <!-- have to total earning here -->
                        <td><%= formattedDate %></td>
                        <td><button class="btn btn-info data" type="button" onclick="updateButton(this,'<%= driver.id %>')"><%= driver.action %></button></td>
                        <td><%= driver.mobile_number %></td>
                      </tr>
                    <% } %>
                  </tbody>
                </table>
                <div>
                  <ul class="pagination" id="myDrivers">
                    <% if (page > 1) { %>
                      <li><a href="javascript:void(0);" onclick="driverButtons('<%= page - 1 %>')">Previous</a></li>
                    <% } %>
                    <% for (let i = 1; i <= totalPages; i++) { %>
                      <li <%= page === i ? 'class="active"' : '' %>
                          <a href="javascript:void(0);" onclick="driverButtons('<%= i %>')"><%= i %></a></li>
                    <% } %>
                    <% if (page < totalPages) { %>
                      <li><a href="javascript:void(0);" onclick="driverButtons('<%= page + 1 %>')">Next</a></li>
                    <% } %>
                  </ul>
                </div>
              </div>
              <div class="tab-pane fade" id="requests">
                <table class="table" id="example1">
                  <thead>
                    <tr class="tabl-size">
                      <th scope="col">Driver Profile</th>
                      <th scope="col">Full Name</th>
                      <th scope="col">Gender</th>
                      <th scope="col">Insurance</th>
                      <th scope="col">Passport photo</th>
                      <th scope="col">ID Card</th>
                      <th scope="col">License</th>
                      <th scope="col">Request Date</th>
                      <th scope="col">Action</th>
                      <th scope="col"></th>
                    </tr>
                  </thead>
                  <tbody>
                    <!-- <tr class="tabl_size">
                      <th scope="row" class=""><img class="profile_img" src="/images/img.png" alt=""/></th>
                      <td>Waloi</td>
                      <td>Male</td>
                      <th scope="row"><img class="insurance_img" src="/images/insurance.png" alt=""/></th>
                      <th scope="row" class=""><img class="passport_img" src="/images/pasport.png" alt=""/></th>
                      <th scope="row"><img class="idcard_img" src="/images/idcard.png" alt=""/></th>
                      <th scope="row"><img class="license_img" src="/images/license.png" alt=""/></th>
                      <td>23 Jun, 2023</td>
                      <td><button class="btn btn-info accept" type="button">Accept</button></td>
                      <td><button class="btn btn-info reject" type="button">Reject</button></td>
                    </tr> -->
                    <% for(let pending of pendingRequests) { %>
                      <% const formattedDate = new Date(pending.created_at).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' }); %>
                      <tr class="tabl_size">
                        <th scope="row" class=""><img class="profile_img" src="<%= pending.profile_image ? (driverImageUrl + pending.profile_image) : '/images/staticDriver.jpg' %>" alt="" onerror="this.style.display='none'; this.style.content='';"/></th>
                        <td><%=pending.username %></td>
                        <td><%=pending.gender %></td>
                        <th scope="row"><img class="license_img" src="<%=driverImageUrl + pending.vechile_insurance %>" alt="" onerror="this.style.display='none'; this.style.content='';"/></th>
                        <th scope="row" class=""><img class="passport_img" src="<%=driverImageUrl + pending.passport_photo %>" alt=""  onerror="this.style.display='none'; this.style.content='';"/></th>
                        <th scope="row"><img class="idcard_img" src="<%=driverImageUrl + pending.id_card %>" alt="" onerror="this.style.display='none'; this.style.content='';"/></th>
                        <th scope="row"><img class="license_img" src="<%=driverImageUrl + pending.license %>" alt=""onerror="this.style.display='none'; this.style.content='';"/></th>
                        <td><%= formattedDate %></td>
                        <!-- <td><button class="btn btn-info data" type="button" onclick="updateButton(this,'<%= pending.id %>')"><%= pending.action %></button></td> -->
                        <td><button class="btn btn-info accept" type="button" onclick="updatePendingReq(this,'<%= pending.id %>','accepted')">Accept</button></td>
                        <td><button class="btn btn-info reject" type="button" onclick="updatePendingReq(this,'<%= pending.id %>','rejected')">Reject</button></td>
                      </tr>
                    <% } %>
                  </tbody>
                </table>
                <div>
                  <ul class="pagination" id="mypendingDrivers">
                    <% if (pending_page > 1) { %>
                      <li><a href="javascript:void(0);" onclick="driverPending_pageButtons('<%= pending_page - 1 %>')">Previous</a></li>
                    <% } %>
                    <% for (let i = 1; i <= total_pendingPages; i++) { %>
                      <li <%= pending_page === i ? 'class="active"' : '' %>
                          <a href="javascript:void(0);" onclick="driverPending_pageButtons('<%= i %>')"><%= i %></a></li>
                    <% } %>
                    <% if (pending_page < total_pendingPages) { %>
                      <li><a href="javascript:void(0);" onclick="driverPending_pageButtons('<%= pending_page + 1 %>')">Next</a></li>
                    <% } %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
<!-- jQuery -->
<script src='https://code.jquery.com/jquery-3.7.0.js'></script>
<!-- Data Table JS -->
<script src='https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js'></script>
<script src='https://cdn.datatables.net/responsive/2.1.0/js/dataTables.responsive.min.js'></script>
<script src='https://cdn.datatables.net/1.13.5/js/dataTables.bootstrap5.min.js'></script>

<script>
  function menuToggle() {
    const toggleMenu = document.querySelector(".menu");
    toggleMenu.classList.toggle("active");
  }

  const toggle = document.getElementById("toggle");
  const left = document.getElementById("left");
  const bodyClass = document.querySelector("body");
  toggle.onclick = function () {
    toggle.classList.toggle("active");
    left.classList.toggle("active");
    bodyClass.classList.toggle("bodyOverflow");
  };

function updateButton(button, driverId) {
  if (confirm("Are you sure you want to change this users action?")) {
  fetch(`/admin/actionOnDriver/${driverId}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      // console.log('----------response-----------',response);
      return response.text();
    })
    .then(newButtonText => {
      // console.log('---------newButtonText---------',newButtonText);
      // console.log('---------button---------',button);
      button.textContent = newButtonText;
    })
    .catch(error => {
      console.error('Error occurred while updating the button:', error);
    })
  } else {
    console.log('-----------------cancel--------------')
  }
}

function updatePendingReq(button, driverId,action) {
  fetch(`/admin/pendingRequests?pendingAction=${action}&driverId=${driverId}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.text();
    })
    .then(() => {
      button.parentNode.parentNode.remove();
    }).catch(error => {
      console.error('Error occurred while updating the button:', error);
    })
}


// function driverButtons(page) {
//   const searchInputValue = document.getElementById('searchInput').value;
//   console.log('Search Input Value:', searchInputValue);
//   fetch(`/admin/renderDriver?pending_page=${pending_page}&searchInput=${searchInputValue}`)   // find div's id and concat here
//     .then(response => response.json())
//     .then(data => {
//       // Handle the data returned from the API
//       // You can update your page with the new data here
//       window.location.href = url;
//     })
//     .catch(error => {
//       console.error('Error:', error);
//     });
// }


function driverButtons(page) {
  const searchInputValue = document.getElementById('searchInput').value;
  const url = `/admin/renderDriver?page=${page}&searchInput=${searchInputValue}`;
  
    if (activeDiv) {
      activeDiv.classList.add('active'); // Reapply the "active" class
    }
  window.location.href = url;
}

function driverPending_pageButtons(pending_page) {
  const searchInputValue = document.getElementById('searchInput').value;
  const url = `/admin/renderDriver?pending_page=${pending_page}&searchInput=${searchInputValue}`;

  window.location.href = url;
  if (activeDiv) {
    activeDiv.classList.add('active'); // Reapply the "active" class
  }
}

// const originalData = {};
// const dataTableInstances = {};

// document.addEventListener("DOMContentLoaded", function() {
//   // Initialize all DataTables
//   const tableIds = ["example", "example1"];

//   tableIds.forEach(tableId => {
//     const table = document.getElementById(tableId);
//     if (table) {
//       const tableRows = document.querySelectorAll(`#${tableId} .tabl_size`);
//       originalData[tableId] = Array.from(tableRows);

//       const shouldShowPagination = tableRows.length > 10;

//       const dataTableOptions = {
//         columnDefs: [{ orderable: false, targets: 4 }],
//         language: {
//           paginate: {
//             previous: '<span class="fa fa-chevron-left dataTables_paginate" id="spanL"></span>',
//             next: '<span class="fa fa-chevron-right dataTables_paginate" id="spanR"></span>'
//           },
//           lengthMenu: 'Display <select class="form-control input-sm">' +
//             '<option value="10">10</option>' +
//             '<option value="20">20</option>' +
//             '<option value="30">30</option>' +
//             '<option value="40">40</option>' +
//             '<option value="50">50</option>' +
//             '<option value="-1">All</option>' +
//             '</select> results'
//         }
//       };

//       if (!shouldShowPagination) {
//         dataTableOptions.paging = false;
//       }
//       dataTableInstances[tableId] = new DataTable(table, dataTableOptions);
//     }
//   });

//   // Add an input event listener to the shared search input
//   // searchInput.addEventListener('input', function () {
//   //   const searchValue = searchInput.value.toLowerCase();
    
//   //   tableIds.forEach(tableId => {
//   //     console.log('---------tableId 1-----------',tableId);

//   //     const matchingRows = originalData[tableId].filter(row => {
//   //       const fullNameCell = row.querySelector('td:nth-child(2)');
//   //       return fullNameCell.textContent.toLowerCase().includes(searchValue);
//   //     });

//   //     if (dataTableInstances[tableId]) {
//   //       console.log('---------tableId 2-----------',tableId);
//   //       const paginationContainer = document.querySelector(`.dataTables_paginate`);
//   //       // const paginationContainer2 = document.getElementsByClassName("spans")
//   //       console.log('---------paginationContainer-----------',paginationContainer);
        
//   //       dataTableInstances[tableId].clear();
//   //       dataTableInstances[tableId].rows.add(matchingRows);
//   //       dataTableInstances[tableId].draw();
        
//   //       console.log('---------length-----------',matchingRows.length);
        
//   //       if (matchingRows.length <= 10) {
//   //         paginationContainer.style.display = 'none';
//   //       } else {
//   //         paginationContainer.style.display = 'block';
//   //       }

//   //     }
//   //   });
//   // });
// });



// const searchInput = document.getElementById("searchInput");

// const originalData = {};
// const dataTableInstances = {};

// document.addEventListener("DOMContentLoaded", function() {
//   // Initialize all DataTables
//   const tableIds = ["example", "example1"];

//   tableIds.forEach(tableId => {
//     const table = document.getElementById(tableId);
//     if (table) {
//       const tableRows = document.querySelectorAll(`#${tableId} .tabl_size`);
//       originalData[tableId] = Array.from(tableRows);

//       const shouldShowPagination = tableRows.length > 10;

//       const dataTableOptions = {
//         columnDefs: [{ orderable: false, targets: 4 }],
//         language: {
//           paginate: {
//             paginate: shouldShowPagination,
//             previous: '<span class="fa fa-chevron-left dataTables_paginate"></span>',
//             next: '<span class="fa fa-chevron-right dataTables_paginate"></span>'
//           },
//           lengthMenu: 'Display <select class="form-control input-sm">' +
//             '<option value="10">10</option>' +
//             '<option value="20">20</option>' +
//             '<option value="30">30</option>' +
//             '<option value="40">40</option>' +
//             '<option value="50">50</option>' +
//             '<option value="-1">All</option>' +
//             '</select> results'
//         }
//       };
//       if (!shouldShowPagination) {
//       // If there are 10 or fewer rows, disable pagination
//       dataTableOptions.paging = false;
//     }
//     dataTableInstances[tableId] = new DataTable(table, dataTableOptions);
//     }
//   });

//   // Add an input event listener to the shared search input
//   searchInput.addEventListener('input', function () {
//     const searchValue = searchInput.value.toLowerCase();
    
//     // Iterate through each table
//     tableIds.forEach(tableId => {
//       const matchingRows = originalData[tableId].filter(row => {
//         const fullNameCell = row.querySelector('td:nth-child(2)');
//         return fullNameCell.textContent.toLowerCase().includes(searchValue);
//       });

//       // Clear and update the specific DataTable for this table
//       if (dataTableInstances[tableId]) {
//         dataTableInstances[tableId].clear();
//         dataTableInstances[tableId].rows.add(matchingRows);
//         dataTableInstances[tableId].draw();

//         const numberOfVisibleRecords = dataTableInstances.rows({ search: 'applied' }).count();
//         const paginationContainer = document.querySelector('.dataTables_paginate');

//         if (numberOfVisibleRecords <= 10) {
//           // Hide the pagination controls
//           paginationContainer.style.display = 'none';
//         } else {
//           // Show the pagination controls
//           paginationContainer.style.display = 'block';
//         }
//       }
//     });
//   });
// });

</script>
</html>
