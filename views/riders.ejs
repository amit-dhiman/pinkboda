<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Houzmart</title>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- <link rel="shortcut icon" href="/images/" type="image/x-icon"> -->

    <!-- Bootstrap CSS v5.2.0-beta1 -->
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" /> -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">
    <!-- Data Table CSS -->
    <link rel='stylesheet' href='https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css'>
    <!-- Font Awesome CSS -->
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css'>
   
    <!-- custom css -->
    <link rel="stylesheet" href="/assets/css/styles.css" />
  </head>

<body>
<div class="container-fluid">
<div class="row flex-nowrap">

  <!-------------- Added Sidebar here --------------->
  <%- include ('./partials/sidebar.ejs') %>

  <div class="col-md-9">
    <div class="row">
      <!------- Add Full Navbar here --------->
      <%- include ('./partials/navbar.ejs') %>
      
      <!------------ rider section is Starts here -------------->

      <div class="right-sidebar1">
        <%- include ('./partials/dashboard.ejs') %>
        <div class="riders_tab">
          <h2>Riders</h2>
          <div class="tab-content table-responsive">
            <div class="tab-pane fade show active" id="user">
              <table id="example" class="table">
                <thead>
                  <tr class="tabl-size">
                    <th scope="col"></th>
                    <th scope="col">Full Name</th>
                    <th scope="col">Gender</th>
                    <th scope="col">Total Rides</th>
                    <th scope="col">Signup date</th>
                    <th scope="col">Action</th>
                    <th scope="col">Contact</th>
                  </tr>
                </thead>
                <tbody>
                   <% for(let rider of getRiders) { %>
                    <% const formattedDate = new Date(rider.created_at).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' }); %>
                    <tr class="tabel_size">
                      <th scope="row"><a href="<%=rider.image ? (userImageUrl + rider.image) : '/images/staticRider.jpg'%>" target="_blank"><img class="profile_img" src="<%=rider.image ? (userImageUrl + rider.image) : '/images/staticRider.jpg'%>"/></a></th>
                      <td><%=rider.username %></td>
                      <td><%=rider.gender %></td>
                      <td><%=rider.total_rides %></td>
                      <td><%=formattedDate %></td>
                      <td><button class="btn btn-info data" type="button" onclick="updateButton(this,'<%= rider.id %>','<%= rider.action %>')"><%= rider.action %></button></td>
                      <td><%=rider.mobile_number %></td>
                    </tr>
                   <% } %>
                   
                </tbody>
              </table>
                <% if(!getRiders.length){ %>
                  <p style="text-align: center;">No data found</p>
                <% } %>
              
              <div>
                <ul class="pagination" id="myRiders">
                  <% if (page > 1) { %>
                    <li><a href="javascript:void(0);" onclick="driverButtons('<%= page - 1 %>')"><i class="fa fa-chevron-left" aria-hidden="false"></i></a></li>
                  <% }  %>        
                  <% if(totalPages > 1){%>          
                    <% for (let i = 1; i <= totalPages; i++) { %>
                      <li <%= page === i ? 'class="active"' : '' %>>
                        <a href="javascript:void(0);" onclick="driverButtons('<%= i %>')"> <%= i %></a>
                      </li>
                    <% } %>
                  <% } %>
                  <% if (page < totalPages) { %>
                    <li><a href="javascript:void(0);" onclick="driverButtons('<%= page + 1 %>')"><i class="fa fa-chevron-right" aria-hidden="false"></i></a></li>
                  <% }  %>
                </ul>
              </div>

            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
</div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
<!-- jQuery -->
<script src='https://code.jquery.com/jquery-3.7.0.js'></script>
<!-- Data Table JS -->
<script src='https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js'></script>
<script src='https://cdn.datatables.net/responsive/2.1.0/js/dataTables.responsive.min.js'></script>
<script src='https://cdn.datatables.net/1.13.5/js/dataTables.bootstrap5.min.js'></script>

<script>
  function menuToggle() {
    const toggleMenu = document.querySelector(".menu");
    toggleMenu.classList.toggle("active");
  }

  const toggle = document.getElementById("toggle");
  const left = document.getElementById("left");
  const bodyClass = document.querySelector("body");
  toggle.onclick = function () {
    toggle.classList.toggle("active");
    left.classList.toggle("active");
    bodyClass.classList.toggle("bodyOverflow");
  };
</script>

<script type="text/javascript">

// document.addEventListener("DOMContentLoaded", function() {
//   const table = document.getElementById("example");
//   const searchInput = document.getElementById("searchInput");

//   if (table) {
//     const tableRows = document.querySelectorAll('.tabel_size');

//     // Initialize the DataTable
//     const dataTable = new DataTable(table, {
//       columnDefs: [{ orderable: false, targets: 5 }],
//       language: {
//         paginate: {
//           previous: '<span class="fa fa-chevron-left dataTables_paginate"></span>',
//           next: '<span class="fa fa-chevron-right dataTables_paginate"></span>',
//         },
//         lengthMenu: 'Display <select class="form-control input-sm">' +
//           '<option value="10">10</option>' +
//           '<option value="20">20</option>' +
//           '<option value="30">30</option>' +
//           '<option value="40">40</option>' +
//           '<option value="50">50</option>' +
//           '<option value="-1">All</option>' +
//           '</select> results',
//       },
//     });

//     let originalData = Array.from(tableRows);
//     const paginationContainer = document.querySelector('.dataTables_paginate');

//     if (originalData.length <= 10) {
//       paginationContainer.style.display = 'none';
//     } else {
//       paginationContainer.style.display = 'block';
//     }
//     searchInput.addEventListener('input', function () {
//       const searchValue = searchInput.value.toLowerCase();

//       let matchingRows = originalData.filter(row => {
//         const fullNameCell = row.querySelector('td:nth-child(2)');
//         return fullNameCell.textContent.toLowerCase().includes(searchValue);
//       });

//       dataTable.clear();
//       dataTable.rows.add(matchingRows);
//       dataTable.draw();

//       const numberOfVisibleRecords = dataTable.rows({ search: 'applied' }).count();
//       // const paginationContainer = document.querySelector('.dataTables_paginate');

//       if (numberOfVisibleRecords <= 10) {
//         paginationContainer.style.display = 'none';
//       } else {
//         paginationContainer.style.display = 'block';
//       }
//     });
//   }
// });

function updateButton(button, riderId,riderAction) {
  let act = riderAction == 'Enable' ? 'Disable' : 'Enable';
  if (confirm(`Are you sure you want to ${act} this rider ?`)) {
    fetch(`/admin/actionOnUser/${riderId}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(newButtonText => {
    console.log('-----------newButtonText---------',newButtonText)
      button.textContent = newButtonText.data;
      const newAction = newButtonText.data;
      const newAct = newAction === 'Enable' ? 'Disable' : 'Enable';
      button.setAttribute('onclick', `updateButton(this, '${riderId}', '${newAction}')`);
    })
    .catch(error => {
      console.error('Error occurred while updating the button:', error);
    })
  } else {
    console.log('-----------------cancel--------------')
  }
}

function driverButtons(page) {
  const searchInputValue = document.getElementById('searchInput').value;
  const url = `/admin/renderRider?page=${page}&searchInput=${searchInputValue}`;
  window.location.href = url;
}

  const iconTrigger = document.getElementById("searchIcon");
  const searchButton = document.getElementById("searchButton");

  iconTrigger.addEventListener("click", () => {
    searchButton.click();
  });


</script>
</html>

